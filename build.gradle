buildscript {

    ext {
        springBootVersion = '2.1.6.RELEASE'
        // fix for not set system variable
        nexus_url = project.findProperty('nexus_url') ?: System.getenv('NEXUS_HOST')
        nexus_user = project.findProperty('nexus_user') ?: System.getenv('NEXUS_USERNAME')
        nexus_pw = project.findProperty('nexus_pw') ?: System.getenv('NEXUS_PASSWORD')
        no_nexus = (project.findProperty('no_nexus') ?: System.getenv('NO_NEXUS') ?: false).toBoolean()


    }

    repositories {
        if (no_nexus) {
            println("using repositories 'jcenter' and 'mavenCentral'")
            jcenter()
            mavenCentral()
        } else {
            println("using nexus repositories")
            if (!nexus_url) {
                throw new GradleException('Nexus URL not specified!')
            }
            maven() {
                url "${nexus_url}/repository/jcenter/"
                credentials() {
                    username = "${nexus_user}"
                    password = "${nexus_pw}"
                }
            }
            maven() {
                url "${nexus_url}/repository/maven-public/"
                credentials() {
                    username = "${nexus_user}"
                    password = "${nexus_pw}"
                }
            }
            maven() {
                url "${nexus_url}/repository/atlassian_public/"
                credentials {
                    username = "${nexus_user}"
                    password = "${nexus_pw}"
                }
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1")
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'eclipse'
    id 'maven'
    id 'jacoco'
    id 'org.sonarqube' version "2.7"
    id "com.diffplug.gradle.spotless" version "3.24.2"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'prov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    if (no_nexus) {
        jcenter()
        mavenCentral()
    } else {
        maven() {
            url "${nexus_url}/repository/jcenter/"
            credentials() {
                username = "${nexus_user}"
                password = "${nexus_pw}"
            }
        }
        maven() {
            url "${nexus_url}/repository/maven-public/"
            credentials() {
                username = "${nexus_user}"
                password = "${nexus_pw}"
            }
        }
        maven() {
            url "${nexus_url}/repository/atlassian_public/"
            credentials {
                username = "${nexus_user}"
                password = "${nexus_pw}"
            }
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    //bunch of prod tools
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    //data rest exposed
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-integration')
    implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-security')
    //security frameowork
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    //templating for frontend
    implementation('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    //hot reloading, disabling cache ...

    annotationProcessor('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.springframework.security:spring-security-test')

    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity5")

    // oauth2
    compile 'org.springframework.security:spring-security-oauth2-core'
    compile 'org.springframework.security:spring-security-oauth2-client'
    compile 'org.springframework.security:spring-security-oauth2-jose'
    compile 'org.springframework.security:spring-security-jwt:1.0.10.RELEASE'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.6.RELEASE'


    //frontend webjars
    compile 'org.webjars.bower:jquery:3.4.1'
    compile 'org.webjars.bower:bootstrap:3.3.7'
    compile 'org.webjars.bower:react:15.5.4'
    compile 'org.webjars.bower:font-awesome:4.7.0'
    compile 'org.webjars.bower:lodash:4.17.10'

    //jira api dependencies
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.0-beta3-atlassian-1'

    //encryption library for properties 
    compile group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '2.1.1'

    //easy http calls to atlassian JSON APIs
    compile "com.squareup.okhttp3:okhttp:3.8.0"

    //jsonschema2pojo-grade-plugin
    // Required if generating equals, hashCode, or toString methods
    compile 'commons-lang:commons-lang:2.6'


    compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.10.0.pr3'
    compile group: 'joda-time', name: 'joda-time', version: '2.8.2'
    compile(group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final')
    compile(group: 'com.atlassian.security', name: 'atlassian-cookie-tools', version: '3.2.11')
    compile(group: 'com.atlassian.crowd', name: 'crowd-integration-springsecurity', version: '1000.82.0') {
        exclude group: 'commons-httpclient'
        exclude group: 'org.apache.ws.commons', module: 'XmlSchema'
        // Explicity excludes vulnerable versions
        exclude group: 'org.apache.struts', module: 'struts2-core'
        exclude group: 'org.apache.struts.xwork', module: 'xwork-core'
        exclude group: 'commons-collections', module: 'commons-collections'
        exclude group: 'commons-fileupload', module: 'commons-fileupload'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'org.aspectj', module: 'aspectjweaver'
        exclude group: 'com.google.guava', module: 'guava'
    }
    // latest version of excluded libs: refactor this when upgrading to new 'com.atlassian.crowd:crowd-integration-springsecurity'
    compile group: 'org.apache.struts', name: 'struts2-core', version: '2.5.20'
    compile group: 'org.apache.struts.xwork', name: 'xwork-core', version: '2.3.37'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'
    compile group: 'com.google.guava', name: 'guava', version: '23.0'

}

bootJar {
    archiveName "app.jar"
    destinationDir file("$buildDir/../docker")
}

jacoco {
    toolVersion = "0.8.3"
}

spotless {
    java {
        googleJavaFormat('1.7')
        indentWithSpaces(2)
    }
}
