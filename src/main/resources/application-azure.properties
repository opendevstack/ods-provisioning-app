#
# This is an example configuration file that shows how to enable Azure AD OAuth2 OIDC
# For more details about Microsoft Spring Boot Starter for Azure Active Directory visit
# https://docs.microsoft.com/en-us/azure/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-active-directory
#

provision.auth.provider=oauth2
provision.auth.provider.oauth2.user-info-uri=user-info

# Application ID (also called Client ID)
spring.security.oauth2.client.registration.azure.client-id=<CLIENT_ID>>
spring.security.oauth2.client.registration.azure.client-secret=<CLIENT_SECRET>
azure.activedirectory.tenant-id=<TENANT_ID>

# It's suggested the logged in user should at least belong to one of the below groups
# If not, the logged in user will not be able to access any authorization controller rest APIs
azure.activedirectory.user-group.allowed-groups=opendevstack-administrators,opendevstack-users 
azure.activedirectory.environment=global-v2-graph
azure.activedirectory.user-group.key=@odata.type
azure.activedirectory.user-group.value=#microsoft.graph.group
azure.activedirectory.user-group.object-id-key=id

oauth2.user.roles.jsonpointerexpression=/claims/roles
oauth2.user.use-email-claim-as-username=true

idmanager.url=https://login.microsoftonline.com
idmanager.realm=${spring.security.oauth2.client.registration.azure.client-id} 

idmanager.group.opendevstack-users=opendevstack-users
idmanager.group.opendevstack-administrators=opendevstack-administrators
idmanager.disable-logout-from-idm=true
