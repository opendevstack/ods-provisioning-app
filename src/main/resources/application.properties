#log level
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.com.atlassian=DEBUG
logging.level.org.opendevstack=DEBUG

#log file
logging.file=provision.log
logging.path=/var/log

#server port 
server.port=8080

# the atlassian API calls just take soooo long
server.servlet.session.timeout=480
server.connection-timeout=90000
spring.session.timeout=480
spring.mvc.async.request-timeout=90000

# Switch authentication provider between 'crowd' or 'oauth2'.
provision.auth.provider=crowd
# include crowd profile per default.
spring.profiles.active=crowd

project.template.default.key=default




# add the ones (jira / confluence) you configured  below to this entry, comma separated
project.template.key.names=${project.template.default.key},kanban

#JIRA properties
jira.uri=http://192.168.56.31:8080
jira.api.path=/rest/api/latest
# config technical jira admin user with following two properties. If not defined, the logged in user will be used instead
#jira.admin_user=admin
#jira.admin_password=admin
jira.permission.filepattern=classpath*:permission-templates/jira.permission.*

# default project type
jira.project.template.key=com.pyxis.greenhopper.jira:gh-scrum-template
jira.project.template.type=software

# kanban project type
jira.project.template.key.kanban=com.pyxis.greenhopper.jira:gh-kanban-template
jira.project.template.type.kanban=software

# add your own ones here - <name> is what you can pass as projectType after adding it to
# project.template.key.names=default,<name>
#
# jira.project.template.key.<name>=com.pyxis.greenhopper.jira:gh-scrum-template
# jira.project.template.type.<name>=software

# jira notification scheme - attached to the project (10000 is the seed ID for default)
jira.project.notification.scheme.id=10000
#enable or disable 'create special permission scheme option'
jira.specialpermissionschema.enabled=true

#Confluence properties
confluence.uri=http://192.168.56.31:8090
# config technical confluence admin user with following two properties. If not defined, the logged in user will be used instead
#confluence.admin_user=admin
#confluence.admin_password=admin
confluence.api.path=/rest
confluence.json.rpc.api.path=/rpc/json-rpc/confluenceservice-v2
confluence.permission.filepattern=classpath*:permission-templates/confluence.permission.*
confluence.blueprint.key=com.atlassian.confluence.plugins.confluence-space-blueprints:documentation-space-blueprint
# add your own ones here - <name> is what you can pass as projectType after adding it to
# project.template.key.names=default,<name>
# 
# confluence.blueprint.key.<name>=.........

#Bitbucket properties
bitbucket.uri=http://192.168.56.31:7990
# config technical bitbucket admin user with following two properties. If not defined, the logged in user will be used instead
#bitbucket.admin_user=admin
#bitbucket.admin_password=admin
bitbucket.api.path=/rest/api/1.0
bitbucket.repository.pattern=%s-%s

bitbucket.default.user.group=opendevstack-administrators
bitbucket.technical.user=cd_user

#Rundeck properties
rundeck.uri=http://192.168.56.31:4440
# config technical rundeck admin user with following two properties. If not defined, the logged in user will be used instead
#rundeck.admin_user=opendevstack.admin
#rundeck.admin_password=admin
rundeck.system.path=/
rundeck.api.path=/api/19
rundeck.auth.url=${rundeck.uri}/j_security_check
rundeck.api.url=${rundeck.uri}/api/19
rundeck.project.name=Quickstarters
rundeck.group.pattern=org.opendevstack.%s
rundeck.artifact.pattern=%s-%s
rundeck.project.group.quickstarter=quickstarts
rundeck.project.group.openshift=openshift
rundeck.project.openshift.create.name=create-projects

# quickstarter & createProjects configuration
jenkinspipeline.quickstarter={beSpringBoot: 'opendevstack/ods-quickstarters.git#production/be-java-springboot/Jenkinsfile', dockerPlain: 'opendevstack/ods-quickstarters.git#production/docker-plain/Jenkinsfile', beGolangPlain: 'opendevstack/ods-quickstarters.git#production/be-golang-plain/Jenkinsfile', bePythonFlask: 'opendevstack/ods-quickstarters.git#production/be-python-flask/Jenkinsfile', dsJupyterNotebook: 'opendevstack/ods-quickstarters.git#production/ds-jupyter-notebook/Jenkinsfile', dsRshiny: 'opendevstack/ods-quickstarters.git#production/ds-rshiny/Jenkinsfile',feAngular: 'opendevstack/ods-quickstarters.git#production/fe-angular/Jenkinsfile',beTypescriptExpress: 'opendevstack/ods-quickstarters.git#production/be-typescript-express/Jenkinsfile',dsMlService: 'opendevstack/ods-quickstarters.git#production/ds-ml-service/Jenkinsfile',beAirflow: 'opendevstack/ods-quickstarters.git#production/be-airflow/Jenkinsfile',releaseManager: 'opendevstack/ods-quickstarters.git#production/release-manager/Jenkinsfile',beScalaAkka: 'opendevstack/ods-quickstarters.git#production/be-scala-akka/Jenkinsfile',e2eCypress: 'opendevstack/ods-quickstarters.git#production/e2e-cypress/Jenkinsfile', feReact: 'opendevstack/ods-quickstarters.git#production/fe-react/Jenkinsfile', feVue: 'opendevstack/ods-quickstarters.git#production/fe-vue/Jenkinsfile', feIonic: 'opendevstack/ods-quickstarters.git#production/fe-ionic/Jenkinsfile'}
jenkinspipeline.create-ods-projects-job=opendevstack/ods-core.git#production/create-projects/Jenkinsfile

#openshift properties
# allow upgrade of a jira only project
openshift.project.upgrade=false

openshift.apps.basedomain=.192.168.56.101.nip.io
openshift.console.uri=https://192.168.56.101:8443/console

#openshift project name patterns
openshift.test.project.name.pattern=%s/project/%s-test
openshift.dev.project.name.pattern=%s/project/%s-dev
openshift.jenkins.project.name.pattern=jenkins-%s-cd%s
openshift.jenkins.webhookproxy.name.pattern=webhook-proxy-%s-cd%s
openshift.jenkins.trigger.secret=secret101

#Cookie Domain
atlassian.domain=192.168.56.31

# Configures whether the application may cleanup (remove) incompletely provisioned project resources (Jira, Confluence, BitBucket, OpenShift) during provision in case of errors. Defaults to true.
provision.cleanup.incomplete.projects=true

#local storage
project.storage.local=/var/log/history/

# should we grant write permission to every member of opendevstack-users group  to a created repository?
provision.scm.grant.repository.writetoeveryuser=false

#mail properties
mail.enabled=true
spring.mail.host=192.168.56.31
spring.mail.port=25
spring.mail.protocol=smtp
spring.mail.defaultEncoding=UTF-8
#add timeout
spring.mail.smtp.timeout=1000
spring.mail.smtp.connectiontimeout=1000
spring.mail.smtps.connectiontimeout=1000

provison.mail.sender=provision@opendevstack.org
spring.main.allow-bean-definition-overriding=true

management.health.mail.enabled=${mail.enabled}


