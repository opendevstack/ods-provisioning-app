# Logging configuration notes:
# - logging is configured in src/main/resources/logback-spring.xml
# - docs: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging
# - (see also spring how-to guides: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-externalize-configuration)
#log level
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.com.atlassian=DEBUG
logging.level.org.opendevstack=DEBUG
# NOTE: this path is for local environemrnt. Do not forget to set in production to a different path
logging.file.path=./build/logs

#server port
server.port=8080
# the atlassian API calls just take soooo long
server.servlet.session.timeout=480
server.connection-timeout=90000
spring.session.timeout=480
spring.mvc.async.request-timeout=90000
# Switch authentication provider between 'crowd' or 'oauth2'.
provision.auth.provider=crowd
# include crowd profile per default.
spring.profiles.active=crowd
project.template.default.key=default
# add the ones (jira / confluence) you configured  below to this entry, comma separated
project.template.key.names=${project.template.default.key},kanban
#JIRA properties
jira.uri=http://192.168.56.31:8080
jira.api.path=/rest/api/latest
# config technical jira admin user with following two properties. If not defined, the logged in user will be used instead
#jira.admin_user=admin
#jira.admin_password=admin
jira.permission.filepattern=classpath*:permission-templates/jira.permission.*
# default project type
jira.project.template.key=com.pyxis.greenhopper.jira:gh-scrum-template
jira.project.template.type=software
# kanban project type
jira.project.template.key.kanban=com.pyxis.greenhopper.jira:gh-kanban-template
jira.project.template.type.kanban=software
# add your own ones here - <name> is what you can pass as projectType after adding it to
# project.template.key.names=default,<name>
#
# jira.project.template.key.<name>=com.pyxis.greenhopper.jira:gh-scrum-template
# jira.project.template.type.<name>=software
# jira notification scheme - attached to the project (10000 is the seed ID for default)
jira.project.notification.scheme.id=10000
#enable or disable 'create special permission scheme option'
jira.specialpermissionschema.enabled=true
#Confluence properties
confluence.uri=http://192.168.56.31:8090
# config technical confluence admin user with following two properties. If not defined, the logged in user will be used instead
#confluence.admin_user=admin
#confluence.admin_password=admin
confluence.api.path=/rest
confluence.json.rpc.api.path=/rpc/json-rpc/confluenceservice-v2
confluence.permission.filepattern=classpath*:permission-templates/confluence.permission.*
confluence.blueprint.key=com.atlassian.confluence.plugins.confluence-space-blueprints:documentation-space-blueprint
# add your own ones here - <name> is what you can pass as projectType after adding it to
# project.template.key.names=default,<name>
# 
# confluence.blueprint.key.<name>=.........
#Bitbucket properties
bitbucket.uri=http://192.168.56.31:7990
# config technical bitbucket admin user with following two properties. If not defined, the logged in user will be used instead
#bitbucket.admin_user=admin
#bitbucket.admin_password=admin
bitbucket.api.path=/rest/api/1.0
bitbucket.repository.pattern=%s-%s
bitbucket.default.user.group=opendevstack-administrators
bitbucket.technical.user=cd_user
bitbucket.opendevstack.project=opendevstack
scm.global.readablerepos.opendevstack[0]=ods-jenkins-shared-library
scm.global.readablerepos.opendevstack[1]=ods-quickstarters
scm.global.readablerepos.opendevstack[2]=ods-mro-jenkins-shared-library
#Rundeck properties
rundeck.uri=http://192.168.56.31:4440
artifact.group.pattern=org.opendevstack.%s
# ODS properties
ods.image-tag=latest
ods.git-ref=production
#openshift properties
# allow upgrade of a jira only project
openshift.project.upgrade=false
openshift.apps.basedomain=.192.168.56.101.nip.io
openshift.console.uri=https://192.168.56.101:8443/console
#openshift project name patterns
openshift.test.project.name.pattern=%s/project/%s-test
openshift.dev.project.name.pattern=%s/project/%s-dev
openshift.cd.project.name.pattern=%s/project/%s-cd
openshift.jenkins.project.name.pattern=jenkins-%s-cd%s
openshift.jenkins.webhookproxy.name.pattern=webhook-proxy-%s-cd%s
openshift.jenkins.trigger.secret=secret101
#Cookie Domain
atlassian.domain=192.168.56.31
# Configures whether the application may cleanup (remove) incompletely provisioned project resources (Jira, Confluence, BitBucket, OpenShift) during provision in case of errors. Defaults to true.
provision.cleanup.incomplete.projects=false
#local storage
project.storage.local=/var/log/history/
# should we grant write permission to every member of opendevstack-users group  to a created repository?
provision.scm.grant.repository.writetoeveryuser=false
#mail properties
mail.enabled=true
spring.mail.host=192.168.56.31
spring.mail.port=25
spring.mail.protocol=smtp
spring.mail.defaultEncoding=UTF-8
#add timeout
spring.mail.smtp.timeout=1000
spring.mail.smtp.connectiontimeout=1000
spring.mail.smtps.connectiontimeout=1000
provison.mail.sender=provision@opendevstack.org
spring.main.allow-bean-definition-overriding=true
management.health.mail.enabled=${mail.enabled}

#############
# Job configurations can have the following properties:
#
# Mandatory:
# jenkinspipeline.[some-job-name].desc -> description of the Job
# jenkinspipeline.[some-job-name].repo -> repo name of the Job
#
# Optional:
# jenkinspipeline.[some-job-name].create-webhook -> whether a default webhook should be created for this repo or not (true by default)
# jenkinspipeline.[some-job-name].branch -> a branch differing from ods.git-ref
# jenkinspipeline.[some-job-name].jenkinsfile -> a path to the jenkinsfile differing from [some-job-name]/Jenkinsfile
#############
#Adminjob configuration: create projects, delete-projects and delete-components
jenkinspipeline.adminjobs.create-projects.desc=Create Project
jenkinspipeline.adminjobs.create-projects.repo=ods-core

jenkinspipeline.adminjobs.delete-projects.desc=Delete openshift project
jenkinspipeline.adminjobs.delete-projects.repo=ods-core

jenkinspipeline.adminjobs.delete-components.desc=Delete openshift components 
jenkinspipeline.adminjobs.delete-components.repo=ods-core


# Backend Quickstarter
jenkinspipeline.quickstarter.be-java-springboot.desc=Backend - SpringBoot/Java
jenkinspipeline.quickstarter.be-java-springboot.repo=ods-quickstarters

jenkinspipeline.quickstarter.be-golang-plain.desc=Backend - Golang
jenkinspipeline.quickstarter.be-golang-plain.repo=ods-quickstarters

jenkinspipeline.quickstarter.be-python-flask.desc=Backend - Python/Flask
jenkinspipeline.quickstarter.be-python-flask.repo=ods-quickstarters

jenkinspipeline.quickstarter.be-scala-akka.desc=Backend - Scala/Akka
jenkinspipeline.quickstarter.be-scala-akka.repo=ods-quickstarters

jenkinspipeline.quickstarter.be-typescript-express.desc=Backend - NodeJS/Express 
jenkinspipeline.quickstarter.be-typescript-express.repo=ods-quickstarters

# Data Science quickstarter
jenkinspipeline.quickstarter.ds-jupyter-notebook.desc=Data Science - Jupyter Notebook
jenkinspipeline.quickstarter.ds-jupyter-notebook.repo=ods-quickstarters

jenkinspipeline.quickstarter.ds-rshiny.desc=Data Science - R-Shiny
jenkinspipeline.quickstarter.ds-rshiny.repo=ods-quickstarters

jenkinspipeline.quickstarter.ds-ml-service.desc=Data Science - Machine Learning
jenkinspipeline.quickstarter.ds-ml-service.repo=ods-quickstarters

# Frontend Quickstarter
jenkinspipeline.quickstarter.fe-angular.desc=Frontend - Angular
jenkinspipeline.quickstarter.fe-angular.repo=ods-quickstarters

jenkinspipeline.quickstarter.fe-react.desc=Frontend - React
jenkinspipeline.quickstarter.fe-react.repo=ods-quickstarters

jenkinspipeline.quickstarter.fe-vue.desc=Frontend - Vue
jenkinspipeline.quickstarter.fe-vue.repo=ods-quickstarters

jenkinspipeline.quickstarter.fe-ionic.desc=Mobile - Ionic
jenkinspipeline.quickstarter.fe-ionic.repo=ods-quickstarters

#Other Quickstarter
jenkinspipeline.quickstarter.docker-plain.desc=Other - Docker/Plain
jenkinspipeline.quickstarter.docker-plain.repo=ods-quickstarters

jenkinspipeline.quickstarter.airflow-cluster.desc=Other - Airflow
jenkinspipeline.quickstarter.airflow-cluster.repo=ods-quickstarters

jenkinspipeline.quickstarter.e2e-cypress.desc=Other - Cypress E2E test
jenkinspipeline.quickstarter.e2e-cypress.repo=ods-quickstarters

jenkinspipeline.quickstarter.release-manager.desc=Other - Releasemanager
jenkinspipeline.quickstarter.release-manager.repo=ods-quickstarters
jenkinspipeline.quickstarter.release-manager.create-webhook=false


jenkinspipeline.quickstarter.e2e-spock-geb.desc=Other - Spock E2E Test
jenkinspipeline.quickstarter.e2e-spock-geb.repo=ods-quickstarters
