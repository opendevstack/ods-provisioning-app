apiVersion: v1
kind: Template
parameters:
- name: ODS_IMAGE_TAG
  required: true
- name: ODS_GIT_REF
  required: true
- name: PROV_APP_JIRA_URI
  required: true
  description: the URI of JIRA used to create new jira projects
- name: PROV_APP_CONFLUENCE_URI
  required: true
  description: the URI of confluence used to create new confluence spaces
- name: PROV_APP_BITBUCKET_URI
  required: true
  description: the URI of bitbucket used to create new project and repositories
- name: PROV_APP_RUNDECK_URI
  required: true
  description: the URI of rundeck used to kickstart provisioning projects and components
- name: PROV_APP_CROWD_URI
  required: true
  description: the URI of crowd used to authenticate users from the app against
- name: OPENSHIFT_API_HOST
  required: true
  description: the API host of the OCP cluster
- name: OPENSHIFT_CONSOLE_HOST
  required: true
  description: the console host of the OCP cluster
- name: PROV_APP_CROWD_USER_GROUP
  required: true
  description: crowd user group
- name: CD_USER_ID
  required: true
  description: the username of the CD user
- name: OPENSHIFT_APPS_BASEDOMAIN
  required: true
  description: the domain of routes exposed on OCP
- name: PROV_APP_PACKAGE_PREFIX
  required: true
  description: the default package prefix
- name: PROV_APP_ATLASSIAN_DOMAIN
  required: true
  description: the domain of the atlassian toolsuite needed for single signon cookies
- name: PROV_APP_CROWD_PASSWORD
  required: true
  description: password of the crowd app to authenticate the provision app against
- name: PROV_APP_JASYPT_PASSWORD
  required: true
- name: PROV_APP_MAIL_HOST
  required: true
  description: The hostname of the mailserver
- name: PROV_APP_MAIL_PASSWORD
  required: true
  description: The password to authenticate against the mail server
- name: PROV_APP_MAIL_USERNAME
  required: true
  description: The username to authenticate against the mail server
- name: PROV_APP_CROWD_ADMIN_GROUP
  required: true
  description: The crowd admin group name
- name: PROV_APP_PIPELINE_TRIGGER_SECRET
  required: true
  description: The trigger secret to pass to the webhook proxy
- name: PROV_APP_LOG_LEVEL_ATLASSIAN_CROWD
  required: true
  description: Log level of Atlassian crowd package
- name: PROV_APP_LOG_LEVEL_OPENDEVSTACK
  required: true
  description: Log level of OpenDevStack package
objects:
- kind: ConfigMap
  metadata:
    labels:
      app: prov-app
    name: application.properties
  apiVersion: v1
  data:
    properties: |
      # log level
      logging.level.root=WARN
      logging.level.org.springframework=INFO
      logging.level.org.springframework.security=DEBUG
      logging.level.com.atlassian=INFO
      logging.level.com.atlassian.crowd=${PROV_APP_LOG_LEVEL_ATLASSIAN_CROWD}
      logging.level.org.opendevstack=${PROV_APP_LOG_LEVEL_OPENDEVSTACK}

      # log file
      logging.file=provision.log

      # atlassian API calls take sooo long
      server.servlet.session.timeout=240
      server.connection-timeout=90000
      spring.session.timeout=240
      spring.mvc.async.request-timeout=90000
      
      # server port
      server.port=8080
      server.use-forward-headers=true

      global.keyuser.role.name=${idmanager.group.opendevstack-administrators}

      project.template.default.key=default

      # project types, these two are configured in the src/main/resources/application.properties
      project.template.key.names=${project.template.default.key},kanban

      # JIRA properties
      jira.uri=${PROV_APP_JIRA_URI}
      jira.api.path=/rest/api/latest
      jira.permission.filepattern=classpath*:permission-templates/jira.permission.*

      # JIRA default project templates
      jira.project.template.key=com.pyxis.greenhopper.jira:gh-scrum-template
      jira.project.template.type=software

      # kanban project type
      jira.project.template.key.kanban=com.pyxis.greenhopper.jira:gh-kanban-template
      jira.project.template.type.kanban=software

      # Confluence properties
      confluence.uri=${PROV_APP_CONFLUENCE_URI}
      confluence.api.path=/rest
      confluence.json.rpc.api.path=/rpc/json-rpc/confluenceservice-v2
      confluence.permission.filepattern=classpath*:permission-templates/confluence.permission.*

      # Bitbucket properties
      bitbucket.uri=${PROV_APP_BITBUCKET_URI}
      bitbucket.api.path=/rest/api/1.0
      bitbucket.repository.pattern=%s-%s
      bitbucket.default.user.group=${PROV_APP_CROWD_USER_GROUP}
      bitbucket.technical.user=${CD_USER_ID}

      scm.global.readablerepos.opendevstack[0]=ods-jenkins-shared-library
      scm.global.readablerepos.opendevstack[1]=ods-quickstarters
      scm.global.readablerepos.opendevstack[2]=ods-mro-jenkins-shared-library

      # ODS properties
      ods.image-tag=${ODS_IMAGE_TAG}
      ods.git-ref=${ODS_GIT_REF}

      # createProjects configuration
      jenkinspipeline.quickstarter.create-projects.desc=Create Project. Only used internally, therefore separated from other quickstarters
      jenkinspipeline.quickstarter.create-projects.url=opendevstack/ods-core.git#${ODS_GIT_REF}/create-projects/Jenkinsfile
      jenkinspipeline.quickstarter.create-projects.type=project

      # Backend quickstarters
      jenkinspipeline.quickstarter.beSpringBoot.desc=Backend - SpringBoot/Java
      jenkinspipeline.quickstarter.beSpringBoot.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-java-springboot/Jenkinsfile
      jenkinspipeline.quickstarter.dockerPlain.desc=Backend - Docker/Plain
      jenkinspipeline.quickstarter.dockerPlain.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/docker-plain/Jenkinsfile
      jenkinspipeline.quickstarter.beGolangPlain.desc=Backend - Golang
      jenkinspipeline.quickstarter.beGolangPlain.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-golang-plain/Jenkinsfile
      jenkinspipeline.quickstarter.bePythonFlask.desc=Backend - Python/Flask
      jenkinspipeline.quickstarter.bePythonFlask.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-python-flask/Jenkinsfile
      jenkinspipeline.quickstarter.beScalaAkka.desc=Backend - Scala/Akka
      jenkinspipeline.quickstarter.beScalaAkka.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-scala-akka/Jenkinsfile
      jenkinspipeline.quickstarter.beTypescriptExpress.desc=Backend - NodeJS/Express
      jenkinspipeline.quickstarter.beTypescriptExpress.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-typescript-express/Jenkinsfile

      # Data Science quickstarters
      jenkinspipeline.quickstarter.dsJupyterNotebook.desc=Data Science - Jupyter Notebook
      jenkinspipeline.quickstarter.dsJupyterNotebook.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/ds-jupyter-notebook/Jenkinsfile
      jenkinspipeline.quickstarter.dsRshiny.desc=Data Science - R-Shiny
      jenkinspipeline.quickstarter.dsRshiny.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/ds-rshiny/Jenkinsfile
      jenkinspipeline.quickstarter.dsMlService.desc=Data Science - Machine Learning
      jenkinspipeline.quickstarter.dsMlService.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/ds-ml-service/Jenkinsfile

      # Frontend quickstarters
      jenkinspipeline.quickstarter.feAngular.desc=Frontend - Angular
      jenkinspipeline.quickstarter.feAngular.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/fe-angular/Jenkinsfile
      jenkinspipeline.quickstarter.feReact.desc=Frontend - React
      jenkinspipeline.quickstarter.feReact.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/fe-react/Jenkinsfile
      jenkinspipeline.quickstarter.feVue.desc=Frontend - Vue
      jenkinspipeline.quickstarter.feVue.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/fe-vue/Jenkinsfile
      jenkinspipeline.quickstarter.feIonic.desc=Mobile - Ionic
      jenkinspipeline.quickstarter.feIonic.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/fe-ionic/Jenkinsfile

      # Other quickstarters
      jenkinspipeline.quickstarter.beAirflow.desc=Other - Airflow
      jenkinspipeline.quickstarter.beAirflow.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/be-airflow/Jenkinsfile
      jenkinspipeline.quickstarter.e2eCypress.desc=Other - Cypress E2E test
      jenkinspipeline.quickstarter.e2eCypress.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/e2e-cypress/Jenkinsfile
      jenkinspipeline.quickstarter.releaseManager.desc=Other - Releasemanager
      jenkinspipeline.quickstarter.releaseManager.url=opendevstack/ods-quickstarters.git#${ODS_GIT_REF}/release-manager/Jenkinsfile

      # openshift properties
      openshift.apps.basedomain=${OPENSHIFT_APPS_BASEDOMAIN}
      openshift.console.uri=${OPENSHIFT_CONSOLE_HOST}/console/project/

      # allow /or disallow a jira only project to be upgraded to a full OCP project
      openshift.project.upgrade=false

      # openshift project name patterns
      openshift.test.project.name.pattern=%s%s-test
      openshift.dev.project.name.pattern=%s%s-dev
      openshift.jenkins.project.name.pattern=jenkins-%s-cd%s
      openshift.jenkins.webhookproxy.name.pattern=webhook-proxy-%s-cd%s
      openshift.jenkins.trigger.secret=${PROV_APP_PIPELINE_TRIGGER_SECRET}

      artifact.group.pattern=${PROV_APP_PACKAGE_PREFIX}.%s


      # Cookie Domain
      atlassian.domain=${PROV_APP_ATLASSIAN_DOMAIN}

      # Data for confluence space creation
      confluence.blueprint.key=com.atlassian.confluence.plugins.confluence-space-blueprints:documentation-space-blueprint

      # idmanager
      provision.auth.provider=crowd
      spring.profiles.active=crowd
      idmanager.group.opendevstack-users=${PROV_APP_CROWD_USER_GROUP}
      idmanager.group.opendevstack-administrators=${PROV_APP_CROWD_ADMIN_GROUP}

      # crowd properties
      crowd.local.directory=LocalDirectory
      crowd.application.name=provision
      crowd.application.password=${PROV_APP_CROWD_PASSWORD}
      crowd.server.url=${PROV_APP_CROWD_URI}/services/
      crowd.cookie.domain=${OPENSHIFT_APPS_BASEDOMAIN}

      # crowd sso cookie keyname
      crowd.sso.cookie.name=crowd.token_key

      # local storage
      project.storage.local=/opt/provision/history/

      jasypt.encryptor.password=${PROV_APP_JASYPT_PASSWORD}

      # mail properties
      # enable mail sendout with project details
      mail.enabled=true
      
      spring.mail.host=${PROV_APP_MAIL_HOST}
      spring.mail.port=587
      spring.mail.protocol=smtp
      spring.mail.debug=true
      spring.mail.defaultEncoding=UTF-8
      spring.mail.smtp.timeout=1000
      spring.mail.smtp.connectiontimeout=1000
      spring.mail.smtps.connectiontimeout=1000
      spring.mail.properties.mail.smtp.ssl.enable=true
      spring.mail.properties.mail.smtp.auth=true
      spring.mail.username=${PROV_APP_MAIL_USERNAME}
      spring.mail.password=${PROV_APP_MAIL_PASSWORD}
      provison.mail.sender=provision@${PROV_APP_MAIL_HOST}
      spring.main.allow-bean-definition-overriding=true
